AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31 
Globals:
  Function:
    Runtime: python3.7
    MemorySize: 128
    Timeout: 900
    Handler: index.lambdaHandler
    Environment:
      Variables:
        TEMPLATE_BUCKET: use_case_pipeline
Resources:
  PrepareChangeset:
    Type: AWS::Serverless:Function
    Properties:
      CodeUri: lambda/prepareChangeset
      Description: Lambda function to prepare changeset for useCases
      FunctionName: LambFormation-prepareChangeset
      Role: !GetAtt UseCasePipelineLambdaRole.Arn 
  CreateUseCase:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda/createUseCase
      Description: Lambda function to create useCases
      FunctionName: LambFormation-createUseCase
    Role: !Ref CommonLambFormationLambdaRole
  UpdateUseCase:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda/updateUseCase
      Description: Lambda function to update useCases
      FunctionName: LambFormation-updateUseCase
      Role: !Ref CommonLambFormationLambdaRole
  DeleteUseCase:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda/deleteUseCase
      Description: Lambda function to delete useCases
      FunctionName: LambFormation-deleteUseCase
      Role: !Ref CommonLambFormationLambdaRole
  CommonLambFormationLambdaRole:
    Type: AWS::IAM::Role
    Properties:
    Properties: 
      AssumeRolePolicyDocument: 
        Version: 2012-10-17 
        Statement: 
          - Effect: Allow 
            Principal: 
              Service: 
                - lambda.amazonaws.com 
            Action: 
              - 'sts:AssumeRole' 
      Policies: 
        - PolicyName: AA-UseCasePipelineLambdaPolicy 
          PolicyDocument: 
            Version: 2012-10-17 
            Statement: 
              - 
                Sid: CodeCommitAccess 
                Effect: Allow 
                Action:  
                  - codecommit:GetBranch 
                  - codecommit:GetCommit 
                  - codecommit:GetBlob 
                  - codecommit:GetDifferences 
                  - codecommit:GetFile 
                  - codecommit:GetRepository 
                Resource: !GetAtt UseCaseStateRepository.Arn 
              - 
                Sid: CloudFormationAccess 
                Effect: Allow 
                Action: 
                  - cloudformation:CreateStack 
                  - cloudformation:ValidateTemplate 
                  - cloudformation:ListExports 
                  - cloudformation:ListStacks 
                  - cloudformation:DescribeStacks 
                  - cloudformation:DescribeStackEvents 
                  - cloudformation:DeleteStack 
                  - cloudformation:UpdateStack 
                  - cloudformation:DescribeStackResources 
                  - cloudformation:GetTemplate 
                Resource: "*" 
              - 
                Sid: CloudWatchAccess 
                Effect: Allow 
                Action: 
                  - logs:PutLogEvents 
                Resource: 
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/LambFormation-prepareChangeset:*:*'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/LambFormation-createUseCase:*:*'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/LambFormation-deleteUseCase:*:*'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/LambFormation-updateUseCase:*:*'
              - 
                Sid: CloudWatchLogStream 
                Effect: Allow 
                Action: 
                  - logs:CreateLogStream 
                  - logs:TagLogGroup 
                  - logs:CreateLogGroup 
                Resource: "*" 
              - 
                Sid: InvokeLambdaAccess 
                Effect: Allow 
                Action: 
                  - lambda:InvokeAsync 
                  - lambda:InvokeFunction 
                Resource: 
                  - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:LambFormation-createUseCase'
                  - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:LambFormation-updateUseCase'
                  - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:LambFormation-deleteUseCase'
                  - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:LambFormation-prepareChangeset'
              - 
                Sid: s3Access
                Effect: Allow
                Action: 
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:CreateBucketPolicy
                  - s3:DeleteBucketPolicy
                  - s3:ListBuckets
                  - s3:GetObject
                  - s3:PutObject
                Resource: "*"
              - 
                Sid: IAMAccess
                Effect: Allow
                Action: 
                  - iam:*
                Resource: "*"
              - 
                Sid: ServiceCatalogAccess
                Effect: Allow
                Action:
                  - serviceCatalog:*
  UseCaseStateRepository:
    Type: AWS::CodeCommitRepository
  BaseUseCaseUserGroup:
    Description: Generic group for new users on platform with read only permissions
    Type: AWS::IAM::Group
  CodeCommitCloudWatchEventRule: 
    Type: AWS::Events::Rule 
    Properties: 
      EventPattern: 
        source: 
          - aws.codecommit 
        detail-type: 
          - 'CodeCommit Repository State Change' 
        resources: 
          - !GetAtt UseCaseStateRepository.Arn 
        detail: 
          event: 
            - referenceCreated 
            - referenceUpdated 
          referenceType: 
            - branch 
          referenceName: 
            - master 
      Targets: 
        - 
          Arn: !GetAtt PrepareChangeset.Arn 
          Id: LambFormation-prepareChangeset
  EventPermissionToInvokeLambda: 
    Type: AWS::Lambda::Permission 
    Properties:  
      Action: lambda:InvokeFunction 
      FunctionName: !Ref PrepareChangeset  
      Principal: 'events.amazonaws.com' 
      SourceArn: !GetAtt CodeCommitCloudWatchEventRule.Arn